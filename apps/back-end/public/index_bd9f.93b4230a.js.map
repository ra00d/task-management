{"version":3,"sources":["/src/pages/teams/teams.tsx","/src/pages/profile/profile.tsx","/src/pages/projects/project-details.tsx","/src/main.tsx","/src/lib/schemas/project.ts","/src/lib/config/query-client.ts","/src/lib/config/nav-items.tsx","/src/lib/api/index.ts","/src/components/ui/error-page.tsx","/src/lib/schemas/user.ts","/src/lib/schemas/task.ts","/src/components/ui/loading-page.tsx","/src/lib/api/home.ts"],"sourcesContent":["export default function TeamsPage() {\n\treturn <div>TeamsPage</div>;\n}\n","import { ErrorPage } from \"@/components/ui/error-page\";\nimport { LoadingPage } from \"@/components/ui/loading-page\";\nimport { getProfile } from \"@/lib/api/auth\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport const Profile = () => {\n\tconst { isLoading, data, isError, error } = useQuery({\n\t\tqueryKey: [\"profile\"],\n\t\tqueryFn: () => getProfile(),\n\t});\n\tif (isLoading) return <LoadingPage />;\n\tif (isError) return <ErrorPage error={error?.message} />;\n\treturn <div>{JSON.stringify(data)}</div>;\n};\n","import { getProject } from \"@/lib/api/projects\";\nimport { useAdvincedQuery } from \"@/lib/hooks\";\nimport { useParams } from \"react-router-dom\";\n\nexport const ProjectDetails = () => {\n\tconst { id } = useParams();\n\n\tconst { data, isLoadingOrError, loadingOrError } = useAdvincedQuery({\n\t\tqueryKey: [`project-${id}`],\n\t\tqueryFn: () => {\n\t\t\treturn getProject(id!);\n\t\t},\n\t});\n\tif (isLoadingOrError) return loadingOrError;\n\treturn <div>{JSON.stringify(data)}</div>;\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { LoadingPage } from \"./components/ui/loading-page\";\nimport apiClient from \"./lib/api\";\nimport routes from \"./lib/config/router\";\nexport function Main() {\n\tconst { isLoading } = useQuery({\n\t\tqueryKey: [\"csrf\"],\n\t\tqueryFn: async () => {\n\t\t\tconst res = await apiClient.get(\"csrf-token\");\n\t\t\tdocument.cookie = `XSRF-TOKEN=${res.data?.token}; SameSite='strict'`;\n\t\t\treturn res.data;\n\t\t},\n\t});\n\tif (isLoading) return <LoadingPage />;\n\treturn <RouterProvider router={routes} />;\n}\n","import { z } from \"zod\";\n\nexport const projectSchema = z.object({\n\tid: z.coerce.number().optional(),\n\tname: z.string().trim().min(2),\n\tdescription: z.string().min(2).trim(),\n\tuserId: z.number().or(z.string()),\n});\nexport type TProject = z.infer<typeof projectSchema>;\n","import { QueryClient } from \"@tanstack/react-query\";\nimport { AxiosError } from \"axios\";\nexport const queryClient = new QueryClient({\n\tdefaultOptions: {\n\t\tqueries: {\n\t\t\tnetworkMode: \"online\",\n\t\t\tthrowOnError(error, query) {\n\t\t\t\tif (error.name === \"AxiosError\") {\n\t\t\t\t\tconst apiError = error as AxiosError;\n\n\t\t\t\t\tif (apiError.response?.status === 403)\n\t\t\t\t\t\twindow.location.href = \"/login\";\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tretry: 2,\n\n\t\t\tstaleTime: 0,\n\t\t},\n\t},\n});\n","import { ReactNode } from \"react\";\nimport { ArchiveIcon, CardStackIcon, HomeIcon } from \"@radix-ui/react-icons\";\nimport { Users } from \"lucide-react\";\n\nexport type TNavItem = {\n\thref: string;\n\ttitle: string;\n\ticon: ReactNode;\n\trole?: \"USER\" | \"ADMIN\";\n};\nexport const navItems: TNavItem[] = [\n\t{\n\t\thref: \"/home\",\n\t\ttitle: \"home\",\n\t\ticon: <HomeIcon />,\n\t},\n\t{\n\t\thref: \"/users\",\n\t\ttitle: \"users\",\n\t\ticon: <Users />,\n\t\trole: \"ADMIN\",\n\t},\n\n\t{\n\t\thref: \"/projects\",\n\t\ttitle: \"projects\",\n\t\ticon: <ArchiveIcon />,\n\t\t// role: \"ADMIN\",\n\t},\n\t{\n\t\thref: \"/tasks\",\n\t\ttitle: \"tasks\",\n\t\ticon: <CardStackIcon />,\n\t},\n];\n","import axios from \"axios\";\nconst apiClient = axios.create({\n\t// baseURL: FARM_BASE_URL || \"127.0.0.1:3000/api\",\n\tbaseURL: \"/api\",\n\twithXSRFToken: true,\n\twithCredentials: true,\n\txsrfCookieName: \"XSRF-TOKEN\",\n\theaders: {\n\t\t\"Content-Type\": \"application/json\",\n\t\tAccept: \"application/json\",\n\t},\n});\nexport default apiClient;\n","import { AlertCircle } from \"lucide-react\";\nimport { ReactNode } from \"react\";\n\nexport const ErrorPage = ({ error }: { error: ReactNode }) => {\n\treturn (\n\t\t<div className=\"size-full flex items-center justify-center flex-1\">\n\t\t\t<div className=\"flex items-center justify-center flex-col\">\n\t\t\t\t<AlertCircle color=\"red\" size=\"64\" />\n\t\t\t\t<h1 className=\"text-3xl font-bold text-center text-red-500\">{error}</h1>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { z } from \"zod\";\n\nexport const userSchema = z.object({\n\tid: z.coerce.number(),\n\temail: z.string().email(),\n\tname: z.string(),\n\trole: z.string(),\n\tactive: z.coerce.boolean(),\n\tlastLogin: z.coerce.date(),\n\tcreatedAt: z.coerce.date(),\n\tupdatedAt: z.coerce.date(),\n});\n\nexport type TUser = z.infer<typeof userSchema>;\n","import { z } from \"zod\";\nimport { userSchema } from \"./user\";\nimport { projectSchema } from \"./project\";\n\nexport const taskSchema = z.object({\n\tid: z.coerce.number().optional().nullable(),\n\n\ttitle: z.string().min(1).trim(),\n\n\tdescription: z.string().min(1).trim(),\n\n\tstatus: z.enum([\"completed\", \"overDue\", \"pending\"]),\n\n\tdueDate: z.coerce.date(),\n\tuser: z.optional(userSchema).nullable(),\n\tproject: z.optional(projectSchema).nullable(),\n\tuserId: z.coerce.number({ required_error: \"user is required\" }),\n\tprojectId: z.coerce.number({ required_error: \"project is required\" }),\n});\n\nexport type TTask = z.infer<typeof taskSchema>;\n","import { LoaderPinwheel } from \"lucide-react\";\n\nexport const LoadingPage = ({ size = \"64\" }: { size?: string }) => {\n\treturn (\n\t\t<div className=\"size-full flex items-center justify-center flex-1\">\n\t\t\t<LoaderPinwheel className=\"animate-spin\" size={size} />\n\t\t</div>\n\t);\n};\n","import apiClient from \".\";\n\nexport const getDashboard = async () => {\n\tconst res = await apiClient.get(\"dashboard\");\n\treturn res.data;\n};\n"],"names":[],"mappings":"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"}